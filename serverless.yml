service: serverless-template
frameworkVersion: '>=2.41.2'

package:
  excludeDevDependencies: true
  individually: true
  exclude:
    - ./mock
    - ./seed

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  stage: ${opt:stage, 'local'}
  region: ${self:custom.config.region}
  memorySize: 128
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:DescribeTable
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_NAME}'
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_NAME}/index/*'
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    DYNAMODB_TABLE_NAME: ${self:custom.database.TABLE_NAME}

custom:
  config: ${file(./stages/index.stage.yml):${opt:stage, self:provider.stage}}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  splitStacks:
    custom: ./stacks-map.ts
    perFunction: false
    perType: false
  database:
    TABLE_NAME: ${self:service}-${self:provider.stage}-test
  dynamodb:
    stages:
      - local
      - test
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: ${self:custom.database.TABLE_NAME}
            sources: [ './seed/example-seed.json' ]
  localstack:
    stages:
      - local
    autostart: false #disable localstack when deploying
  prune:
    automatic: true
    number: 3
  jest:
    preset: ts-jest
    bail: 1
    moduleNameMapper:
      - "@settings": "<rootDir>/config/settings.ts"
      - "@functions/(.*)": "<rootDir>/src/functions/$1"
      - "@core/(.*)": "<rootDir>/src/core/$1"
  serverless-offline:
    useChildProcesses: true

resources:
  Resources:
    Test:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-test
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

plugins:
  - serverless-webpack
  - serverless-localstack
  - serverless-dynamodb-local
  - serverless-prune-plugin
  - serverless-jest-plugin
  - serverless-offline
  - serverless-offline-dynamodb-streams
  - serverless-domain-manager
  - serverless-plugin-split-stacks

functions:
  hello:
    handler: src/functions/hello/hello.handler
    events:
      - http:
          path: hello/{id}
          method: get
          cors: true
